{
  "name": "dog-expert",
  "repository": {
    "type": "git",
    "url": "https://github.com/aaneitchik/dog-expert.git"
  },
  "description": "Recognize dog breed from image uploaded by user",
  "homepage": "https://github.com/aaneitchik/dog-expert",
  "dependencies": {
    "@tensorflow-models/mobilenet": "^2.0.4",
    "@tensorflow/tfjs": "^3.0.0",
    "react": "^17.0.1",
    "react-dom": "^17.0.1"
  },
  "devDependencies": {
    "@babel/core": "^7.13.10",
    "@babel/plugin-proposal-optional-chaining": "^7.13.8",
    "@babel/preset-env": "^7.13.10",
    "@babel/preset-react": "^7.12.13",
    "@babel/preset-typescript": "^7.13.0",
    "@cypress/code-coverage": "^3.9.4",
    "@cypress/react": "^5.3.2",
    "@cypress/webpack-dev-server": "^1.1.2",
    "@istanbuljs/nyc-config-typescript": "^1.0.1",
    "@ridedott/eslint-config": "^2.7.3",
    "@testing-library/cypress": "^7.0.5",
    "@testing-library/jest-dom": "^5.11.9",
    "@testing-library/react": "^11.2.5",
    "@testing-library/user-event": "^12.7.3",
    "@types/jest": "^26.0.20",
    "@types/jest-axe": "^3.5.1",
    "@types/react": "^17.0.2",
    "@types/react-dom": "^17.0.1",
    "@types/webpack-env": "^1.16.0",
    "autoprefixer": "^9.8.6",
    "babel-loader": "^8.2.2",
    "babel-plugin-istanbul": "^6.0.0",
    "clean-webpack-plugin": "^3.0.0",
    "comlink-loader": "^2.0.0",
    "css-loader": "^3.6.0",
    "cssnano": "^4.1.10",
    "cypress": "^7.1.0",
    "cypress-file-upload": "^5.0.6",
    "eslint": "^7.20.0",
    "eslint-plugin-cypress": "^2.11.2",
    "eslint-plugin-jsx-a11y": "^6.4.1",
    "eslint-plugin-react": "^7.22.0",
    "eslint-plugin-react-hooks": "^4.2.0",
    "html-loader": "^0.5.5",
    "html-webpack-plugin": "^3.2.0",
    "husky": "^4.3.8",
    "jest": "^26.6.3",
    "jest-axe": "^4.1.0",
    "lint-staged": "^10.5.4",
    "msw": "^0.26.2",
    "npm-run-all": "^4.1.5",
    "postcss": "^8.2.6",
    "postcss-loader": "^3.0.0",
    "prettier": "^2.2.1",
    "source-map-support": "^0.5.19",
    "start-server-and-test": "^1.12.0",
    "style-loader": "^1.3.0",
    "stylelint": "^13.11.0",
    "stylelint-config-prettier": "^8.0.2",
    "stylelint-config-standard": "^20.0.0",
    "stylelint-order": "^4.1.0",
    "terser-webpack-plugin": "^4.2.3",
    "ts-loader": "^8.0.17",
    "ts-node": "^9.1.1",
    "typescript": "^4.1.5",
    "webpack": "^4.46.0",
    "webpack-cli": "^3.3.12",
    "webpack-dev-server": "^3.11.2",
    "webpack-merge": "^5.7.3",
    "whatwg-fetch": "^3.6.1",
    "workerize-loader": "^1.3.0"
  },
  "engines": {
    "node": "14",
    "npm": ">=6.14.10"
  },
  "files": [
    "src"
  ],
  "husky": {
    "hooks": {
      "pre-commit": "npm run husky:pre-commit"
    }
  },
  "license": "UNLICENSED",
  "lint-staged": {
    "*.css": [
      "stylelint --fix"
    ],
    "*.{ts,tsx}": [
      "eslint --fix --resolve-plugins-relative-to \"./node_modules/@ridedott/eslint-config\""
    ],
    "*.{css,js,json,md,ts,tsx,yaml,yml}": [
      "prettier --write"
    ]
  },
  "scripts": {
    "format": "prettier --check \"**/*.{css,js,json,md,ts,tsx,yml,yaml}\"",
    "format:fix": "prettier --write \"**/*.{css,js,json,md,ts,tsx,yml,yaml}\"",
    "husky:lint-staged": "lint-staged",
    "husky:pre-commit": "run-p husky:lint-staged",
    "lint": "run-p lint:css lint:ts",
    "lint:css": "stylelint 'src/**/*.css'",
    "lint:css:fix": "stylelint --fix 'src/**/*.css'",
    "lint:fix": "run-p lint:*:fix",
    "lint:ts": "eslint --resolve-plugins-relative-to \"./node_modules/@ridedott/eslint-config\" \"**/*.{ts,tsx}\"",
    "lint:ts:fix": "eslint --fix --resolve-plugins-relative-to \"./node_modules/@ridedott/eslint-config\" \"**/*.{ts,tsx}\"",
    "start": "webpack-dev-server --config ./webpack.dev.config.js",
    "build": "webpack --config ./webpack.prod.config.js",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cy-ct": "cypress open-ct",
    "test:e2e": "start-server-and-test start http://localhost:8080 cy:open",
    "test:jest:coverage": "jest --coverage",
    "test:cy-ct:coverage": "CODE_COVERAGE=true cypress run-ct",
    "test:cy-ct:coverage-for-merged-report": "npm run mkdir:reports && npm run test:cy-ct:coverage && cp cypress-coverage/coverage-final.json reports/from-cy-ct.json && rm -rf .nyc_output",
    "test:e2e:coverage": "CODE_COVERAGE=true start-server-and-test start http://localhost:8080 cy:coverage",
    "test:coverage": "npm run test:cy-ct:coverage-for-merged-report && run-p test:jest:coverage test:e2e:coverage",
    "cy:open": "cypress open",
    "cy:coverage": "cypress run",
    "mkdir:reports": "mkdir reports || true",
    "precopy:reports": "npm run mkdir:reports",
    "copy:reports": "cp cypress-coverage/coverage-final.json reports/from-cypress-e2e.json && cp jest-coverage/coverage-final.json reports/from-jest.json",
    "precombine:reports": "npm run copy:reports && mkdir .nyc_output || true",
    "combine:reports": "npx nyc merge reports coverage.json && mv coverage.json .nyc_output/out.json",
    "precoverage-report:merged": "npm run test:coverage && npm run combine:reports",
    "coverage-report:merged": "npx nyc report --temp-dir .nyc_output --reporter lcov --reporter text --report-dir coverage",
    "types": "run-p types:*",
    "types:root": "tsc --noEmit --project tsconfig.json",
    "types:cypress": "tsc --noEmit --project cypress/tsconfig.json"
  },
  "nyc": {
    "extends": "@istanbuljs/nyc-config-typescript",
    "report-dir": "cypress-coverage"
  },
  "version": "1.0.0"
}
